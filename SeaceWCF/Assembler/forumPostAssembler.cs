//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/10/20 - 23:37:23
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SeaceWCF.Dtos;
using SeaceWCF;

namespace SeaceWCF.Assembler
{

    /// <summary>
    /// Assembler for <see cref="forumPost"/> and <see cref="forumPostDTO"/>.
    /// </summary>
    public static partial class forumPostAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="forumPostDTO"/> converted from <see cref="forumPost"/>.</param>
        static partial void OnDTO(this forumPost entity, forumPostDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="forumPost"/> converted from <see cref="forumPostDTO"/>.</param>
        static partial void OnEntity(this forumPostDTO dto, forumPost entity);

        /// <summary>
        /// Converts this instance of <see cref="forumPostDTO"/> to an instance of <see cref="forumPost"/>.
        /// </summary>
        /// <param name="dto"><see cref="forumPostDTO"/> to convert.</param>
        public static forumPost ToEntity(this forumPostDTO dto)
        {
            if (dto == null) return null;

            var entity = new forumPost();

            entity.idForumPost = dto.idForumPost;
            entity.idSubcategory = dto.idSubcategory;
            entity.idPerson = dto.idPerson;
            entity.parent_post = dto.parent_post;
            entity.title = dto.title;
            entity.content_forum = dto.content_forum;
            entity.date = dto.date;
            entity.ip = dto.ip;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="forumPost"/> to an instance of <see cref="forumPostDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="forumPost"/> to convert.</param>
        public static forumPostDTO ToDTO(this forumPost entity)
        {
            if (entity == null) return null;

            var dto = new forumPostDTO();

            dto.idForumPost = entity.idForumPost;
            dto.idSubcategory = entity.idSubcategory;
            dto.idPerson = entity.idPerson;
            dto.parent_post = entity.parent_post;
            dto.title = entity.title;
            dto.content_forum = entity.content_forum;
            dto.date = entity.date;
            dto.ip = entity.ip;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="forumPostDTO"/> to an instance of <see cref="forumPost"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<forumPost> ToEntities(this IEnumerable<forumPostDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="forumPost"/> to an instance of <see cref="forumPostDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<forumPostDTO> ToDTOs(this IEnumerable<forumPost> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
