//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/10/20 - 22:53:33
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SeaceWCF.Dtos;
using SeaceWCF;

namespace SeaceWCF.Assembler
{

    /// <summary>
    /// Assembler for <see cref="forumSubcategory"/> and <see cref="forumSubcategoryDTO"/>.
    /// </summary>
    public static partial class forumSubcategoryAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="forumSubcategoryDTO"/> converted from <see cref="forumSubcategory"/>.</param>
        static partial void OnDTO(this forumSubcategory entity, forumSubcategoryDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="forumSubcategory"/> converted from <see cref="forumSubcategoryDTO"/>.</param>
        static partial void OnEntity(this forumSubcategoryDTO dto, forumSubcategory entity);

        /// <summary>
        /// Converts this instance of <see cref="forumSubcategoryDTO"/> to an instance of <see cref="forumSubcategory"/>.
        /// </summary>
        /// <param name="dto"><see cref="forumSubcategoryDTO"/> to convert.</param>
        public static forumSubcategory ToEntity(this forumSubcategoryDTO dto)
        {
            if (dto == null) return null;

            var entity = new forumSubcategory();

            entity.idSubcategory = dto.idSubcategory;
            entity.idCategory = dto.idCategory;
            entity.title = dto.title;
            entity.description = dto.description;
            entity.date = dto.date;
            entity.ip = dto.ip;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="forumSubcategory"/> to an instance of <see cref="forumSubcategoryDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="forumSubcategory"/> to convert.</param>
        public static forumSubcategoryDTO ToDTO(this forumSubcategory entity)
        {
            if (entity == null) return null;

            var dto = new forumSubcategoryDTO();

            dto.idSubcategory = entity.idSubcategory;
            dto.idCategory = entity.idCategory;
            dto.title = entity.title;
            dto.description = entity.description;
            dto.date = entity.date;
            dto.ip = entity.ip;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="forumSubcategoryDTO"/> to an instance of <see cref="forumSubcategory"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<forumSubcategory> ToEntities(this IEnumerable<forumSubcategoryDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="forumSubcategory"/> to an instance of <see cref="forumSubcategoryDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<forumSubcategoryDTO> ToDTOs(this IEnumerable<forumSubcategory> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
